basePath: /api/v1
definitions:
  rest.AddClockToWorkScaleRequest:
    properties:
      clock:
        type: string
      timezone:
        type: string
      type:
        type: integer
    required:
    - clock
    - timezone
    - type
    type: object
  rest.AddClockToWorkScaleResponse:
    properties:
      id:
        type: string
    type: object
  rest.AddEmployeeToCompanyRequest:
    properties:
      employee_id:
        type: string
    required:
    - employee_id
    type: object
  rest.AddWorkScaleToEmployeeRequest:
    properties:
      work_scale_id:
        type: string
    required:
    - work_scale_id
    type: object
  rest.Clock:
    properties:
      clock:
        type: string
      created_at:
        type: string
      id:
        type: string
      timezone:
        type: string
      type:
        type: string
      updated_at:
        type: string
      work_scale_id:
        type: string
    type: object
  rest.Company:
    properties:
      cnpj:
        type: string
      corporate_name:
        type: string
      created_at:
        type: string
      id:
        type: string
      trade_name:
        type: string
      updated_at:
        type: string
    type: object
  rest.CreateCompanyRequest:
    properties:
      cnpj:
        type: string
      corporate_name:
        type: string
      trade_name:
        type: string
    required:
    - cnpj
    - corporate_name
    - trade_name
    type: object
  rest.CreateCompanyResponse:
    properties:
      id:
        type: string
    type: object
  rest.CreateWorkScaleRequest:
    properties:
      description:
        type: string
      name:
        type: string
    required:
    - name
    type: object
  rest.CreateWorkScaleResponse:
    properties:
      id:
        type: string
    type: object
  rest.HTTPError:
    properties:
      code:
        example: 400
        type: integer
      error:
        example: status bad request
        type: string
    type: object
  rest.HTTPResponse:
    properties:
      code:
        example: 200
        type: integer
      message:
        example: a message
        type: string
    type: object
  rest.SearchCompaniesResponse:
    properties:
      companies:
        items:
          $ref: '#/definitions/rest.Company'
        type: array
      next_page_token:
        type: string
    type: object
  rest.SearchWorkScalesResponse:
    properties:
      work_scales:
        items:
          $ref: '#/definitions/rest.WorkScale'
        type: array
    type: object
  rest.UpdateClockRequest:
    properties:
      clock:
        type: string
      timezone:
        type: string
      type:
        type: integer
    type: object
  rest.UpdateCompanyRequest:
    properties:
      corporate_name:
        type: string
      trade_name:
        type: string
    type: object
  rest.WorkScale:
    properties:
      clocks:
        items:
          $ref: '#/definitions/rest.Clock'
        type: array
      company_id:
        type: string
      created_at:
        type: string
      description:
        type: string
      id:
        type: string
      name:
        type: string
      updated_at:
        type: string
    type: object
info:
  contact:
    email: contato@coding4u.com.br
    name: Coding4u
  description: Swagger API for Golang Project Company.
  termsOfService: http://swagger.io/terms/
  title: Company Swagger API
  version: "1.0"
paths:
  /companies:
    get:
      consumes:
      - application/json
      description: Search companies by `filter`. if the page size is empty, 10 will
        be considered.
      operationId: searchCompanies
      parameters:
      - in: query
        name: cnpj
        type: string
      - in: query
        name: corporate_name
        type: string
      - default: 10
        in: query
        name: page_size
        type: integer
      - in: query
        name: page_token
        type: string
      - in: query
        name: trade_name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.SearchCompaniesResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/rest.HTTPError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/rest.HTTPError'
      security:
      - ApiKeyAuth: []
      summary: search companies by filter
      tags:
      - Company
    post:
      consumes:
      - application/json
      description: create company
      operationId: createCompany
      parameters:
      - description: JSON body to create a new company
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/rest.CreateCompanyRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.CreateCompanyResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/rest.HTTPError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/rest.HTTPError'
      security:
      - ApiKeyAuth: []
      summary: create a company
      tags:
      - Company
  /companies/{company_id}:
    get:
      consumes:
      - application/json
      description: Router for find a company
      operationId: findCompany
      parameters:
      - description: Company ID
        in: path
        name: company_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.Company'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/rest.HTTPError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/rest.HTTPError'
      security:
      - ApiKeyAuth: []
      summary: find a company
      tags:
      - Company
    put:
      consumes:
      - application/json
      description: Router for update a company
      operationId: updateCompany
      parameters:
      - description: Company ID
        in: path
        name: company_id
        required: true
        type: string
      - description: JSON body to update a new company
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/rest.UpdateCompanyRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.HTTPResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/rest.HTTPError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/rest.HTTPError'
      security:
      - ApiKeyAuth: []
      summary: update a Company
      tags:
      - Company
  /companies/{company_id}/employees:
    post:
      consumes:
      - application/json
      description: Router for add employee to company
      operationId: addEmployeeToCompany
      parameters:
      - description: Company ID
        in: path
        name: company_id
        required: true
        type: string
      - description: JSON body to add employee to company\
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/rest.AddEmployeeToCompanyRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.HTTPResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/rest.HTTPError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/rest.HTTPError'
      security:
      - ApiKeyAuth: []
      summary: add employee to company
      tags:
      - Company
  /companies/{company_id}/employees/{employee_id}/work-scales:
    post:
      consumes:
      - application/json
      description: Add work scale to employee
      operationId: addWorkScaleToEmployee
      parameters:
      - description: Company ID
        in: path
        name: company_id
        required: true
        type: string
      - description: Employee ID
        in: path
        name: employee_id
        required: true
        type: string
      - description: JSON body to add work scale to employee
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/rest.AddWorkScaleToEmployeeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.HTTPResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/rest.HTTPError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/rest.HTTPError'
      security:
      - ApiKeyAuth: []
      summary: add work scale to employee
      tags:
      - Company
  /companies/{company_id}/work-scales:
    get:
      consumes:
      - application/json
      description: Search work scales by `filter`.
      operationId: searchWorkScales
      parameters:
      - description: Company ID
        in: path
        name: company_id
        required: true
        type: string
      - in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.SearchWorkScalesResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/rest.HTTPError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/rest.HTTPError'
      security:
      - ApiKeyAuth: []
      summary: search work scales by filter
      tags:
      - Company
    post:
      consumes:
      - application/json
      description: Create work scale
      operationId: createWorkScale
      parameters:
      - description: Company ID
        in: path
        name: company_id
        required: true
        type: string
      - description: JSON body to create a new work scale
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/rest.CreateWorkScaleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.CreateWorkScaleResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/rest.HTTPError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/rest.HTTPError'
      security:
      - ApiKeyAuth: []
      summary: create work scale
      tags:
      - Company
  /companies/{company_id}/work-scales/{work_scale_id}:
    get:
      consumes:
      - application/json
      description: Router for find a work scale
      operationId: findWorkScale
      parameters:
      - description: Company ID
        in: path
        name: company_id
        required: true
        type: string
      - description: Work Scale ID
        in: path
        name: work_scale_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.WorkScale'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/rest.HTTPError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/rest.HTTPError'
      security:
      - ApiKeyAuth: []
      summary: find a work scale
      tags:
      - Company
  /companies/{company_id}/work-scales/{work_scale_id}/clocks:
    post:
      consumes:
      - application/json
      description: Add clock to work scale
      operationId: addClockToWorkScale
      parameters:
      - description: Company ID
        in: path
        name: company_id
        required: true
        type: string
      - description: Work Scale ID
        in: path
        name: work_scale_id
        required: true
        type: string
      - description: JSON body to add clock to work scale
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/rest.AddClockToWorkScaleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.AddClockToWorkScaleResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/rest.HTTPError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/rest.HTTPError'
      security:
      - ApiKeyAuth: []
      summary: add clock to work scale
      tags:
      - Company
  /companies/{company_id}/work-scales/{work_scale_id}/clocks/{clock_id}:
    delete:
      consumes:
      - application/json
      description: Router for delete clock
      operationId: deleteClock
      parameters:
      - description: Company ID
        in: path
        name: company_id
        required: true
        type: string
      - description: Work Scale ID
        in: path
        name: work_scale_id
        required: true
        type: string
      - description: Clock ID
        in: path
        name: clock_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.HTTPResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/rest.HTTPError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/rest.HTTPError'
      security:
      - ApiKeyAuth: []
      summary: delete clock
      tags:
      - Company
    get:
      consumes:
      - application/json
      description: Find clock
      operationId: findClock
      parameters:
      - description: Company ID
        in: path
        name: company_id
        required: true
        type: string
      - description: Work Scale ID
        in: path
        name: work_scale_id
        required: true
        type: string
      - description: Clock ID
        in: path
        name: clock_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.Clock'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/rest.HTTPError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/rest.HTTPError'
      security:
      - ApiKeyAuth: []
      summary: find clock
      tags:
      - Company
    put:
      consumes:
      - application/json
      description: Router for update a clock
      operationId: updateClock
      parameters:
      - description: Company ID
        in: path
        name: company_id
        required: true
        type: string
      - description: Work Scale ID
        in: path
        name: work_scale_id
        required: true
        type: string
      - description: Clock ID
        in: path
        name: clock_id
        required: true
        type: string
      - description: JSON body to update a clock
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/rest.UpdateClockRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.HTTPResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/rest.HTTPError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/rest.HTTPError'
      security:
      - ApiKeyAuth: []
      summary: update a clock
      tags:
      - Company
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
